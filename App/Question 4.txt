Your app supports light and dark themes.
Q4: How will you share the current theme across all components using useContext?

Theme.js:

import { createContext, useContext, useState } from "react";

// Create the context
const ThemeContext = createContext();

// Create a provider for theme state
export function ThemeProvider({ children }) {
  const [theme, setTheme] = useState("light");

  // Toggle between dark and light
  function toggleTheme() {
    setTheme((prev) => (prev === "light" ? "dark" : "light"));
  }

  return (
    <ThemeContext.Provider value={{ theme, toggleTheme }}>
      {children}
    </ThemeContext.Provider>
  );
}

// Custom hook to use theme anywhere
export function useTheme() {
  return useContext(ThemeContext);
}
-----------------------------------------------------------------------------------------
Wrap APp with main.jsx and Root.js:

import { ThemeProvider } from "./ThemeContext";
import App from "./App";

export default function Root() {
  return (
    <ThemeProvider>
      <App />
    </ThemeProvider>
  );
}
=------------------------------------------------------------------------------------------
Using Theme in Header.jsx


import { useTheme } from "./ThemeContext";

export default function Header() {
  const { theme, toggleTheme } = useTheme();

  return (
    <header className={theme}>
      <h1>My Shop</h1>
      <button onClick={toggleTheme}>
        Switch to {theme === "light" ? "Dark" : "Light"} Mode
      </button>
    </header>
  );
}

